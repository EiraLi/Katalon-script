<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="superWild_5" time="426" tests="1" failures="0" errors="0">
    <testsuite name="superWild_5" tests="1" failures="0" errors="0" time="426" timestamp="2019-08-11 00:01:37" hostname="eiralee - 172.20.10.2" id="Test Suites/superWild_5">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="/Users/eiralee/EiraLi-Katalon_API/INT_env/Reports/superWild_5/20190811_000123"/>
            <property name="logFiles" value="/Users/eiralee/EiraLi-Katalon_API/INT_env/Reports/superWild_5/20190811_000123/execution0.log, /Users/eiralee/EiraLi-Katalon_API/INT_env/Reports/superWild_5/20190811_000123/execution1.log, /Users/eiralee/EiraLi-Katalon_API/INT_env/Reports/superWild_5/20190811_000123/execution2.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="eiralee - 172.20.10.2"/>
            <property name="hostAddress" value="172.20.10.2"/>
            <property name="os" value="Mac OS X 64bit"/>
            <property name="katalonVersion" value="6.2.0.1"/>
        </properties>
        <testcase name="Test Cases/M4-Game/Super_Wild/5_Expanding_CALL" classname="Test Cases/M4-Game/Super_Wild/5_Expanding_CALL" status="PASSED">
            <system-out>2019-08-11 00:01:37 - [TEST_CASE][PASSED] - Test Cases/M4-Game/Super_Wild/5_Expanding_CALL: Test Cases/M4-Game/Super_Wild/5_Expanding_CALL

2019-08-11 00:01:39 - [TEST_STEP][PASSED] - Expanding = new java.util.ArrayList(): null

2019-08-11 00:01:39 - [TEST_STEP][PASSED] - Expanding.add("original_reels"): null

2019-08-11 00:01:39 - [TEST_STEP][PASSED] - Expanding.add("swapped_symbols"): null

2019-08-11 00:01:39 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-11 00:01:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:40 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:40 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:40 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-11 00:01:40 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:40 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:40 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-11 00:01:40 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-11 00:01:40 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-11 00:01:41 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-11 00:01:41 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-11 00:01:41 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-11 00:01:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:41 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-11 00:01:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:42 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:42 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:42 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-11 00:01:42 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-11 00:01:42 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-11 00:01:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:42 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-11 00:01:42 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("RGS(M4)/M4_init", ["partner":Partner, "M4_recorder":M4_recorder, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-11 00:01:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-11 00:01:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt;= 500, (i++)]): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:45 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:57 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:01:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:01:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:01:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:01:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:01:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:01:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:16 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:16 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:02:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:28 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:28 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:33 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:33 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:33 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:33 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:33 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:33 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:34 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:34 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:34 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:49 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:49 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:55 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:55 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:02:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:02:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:02:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:02:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:02:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:03 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:07 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:07 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:32 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:03:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:03:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:03:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:03:52 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:03:52 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:03:56 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:03:56 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:03:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:03:56 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:03:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:03:56 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:03:56 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:03:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:03:56 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:07 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:07 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:08 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:08 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:08 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:15 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:15 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:15 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:15 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:15 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:15 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:20 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:20 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:20 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:20 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:20 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:20 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:25 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:25 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:26 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:31 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:42 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:42 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:43 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:48 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:48 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:49 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:49 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:04:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:04:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:04:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:04:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:04:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:04:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:11 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:13 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:23 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:23 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:28 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:28 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:30 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:30 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:05:33 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:05:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:34 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:34 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:34 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:36 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:36 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:36 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:39 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:40 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:40 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:40 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:41 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:41 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:41 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:46 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:46 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:05:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:05:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:05:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:05:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:05:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:11 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:12 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:12 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:12 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:19 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:19 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:23 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:23 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:23 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:23 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:29 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:30 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:30 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:30 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:31 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:36 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:36 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:36 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:36 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:36 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:36 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:36 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:38 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:43 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:45 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:45 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:49 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:49 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:49 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:49 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:49 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:49 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:49 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:49 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:50 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:56 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:56 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:56 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:56 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:56 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:56 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:56 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:57 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:06:57 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:06:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:57 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:06:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:06:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:06:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:04 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:04 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:04 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:05 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:05 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:05 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:05 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:11 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:16 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:16 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:16 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:16 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:16 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:16 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:16 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:17 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:17 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:24 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:24 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:24 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:25 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:25 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:29 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:31 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:31 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:32 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:32 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:36 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:36 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:36 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:36 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:36 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:36 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:36 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:36 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:38 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:38 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:38 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:39 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:39 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:39 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:39 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:45 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:46 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:46 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:52 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:57 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:57 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:57 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:57 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:57 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:57 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:57 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:07:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:07:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:07:59 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:07:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:07:59 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:00 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:00 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:04 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:04 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:04 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:04 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:04 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:04 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:04 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:07 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:07 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:19 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:19 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:19 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:19 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:19 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:20 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:20 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:20 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:21 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:26 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:26 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:26 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:26 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:26 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:26 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:26 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:28 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:28 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:28 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:28 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:28 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:30 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:30 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:33 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:33 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:33 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:33 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:33 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:33 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:33 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:37 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:41 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:41 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:41 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:41 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:41 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:41 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:41 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:41 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:42 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:42 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:48 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:48 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:48 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:48 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:48 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:48 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:48 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:48 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:50 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:51 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:51 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:51 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:55 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:55 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:55 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:55 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:55 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:58 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:08:58 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:08:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:58 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:08:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:08:59 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:08:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:05 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:05 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:06 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:06 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:06 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:11 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:11 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:13 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:13 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:14 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:14 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:14 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:21 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:21 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:22 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:22 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:22 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:22 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:26 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:29 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:29 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:29 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:30 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:30 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:30 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:30 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:30 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:34 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:34 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:34 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:34 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:34 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:37 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:37 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:37 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:37 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:37 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:37 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:38 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:38 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:38 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:38 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:38 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:38 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:39 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:39 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:42 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:42 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:42 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:42 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:42 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:42 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:42 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:42 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:45 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:45 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:47 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:47 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:47 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:50 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:50 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:09:50 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:09:50 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:50 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:50 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:50 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:50 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:53 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:53 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:09:54 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:09:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:09:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:09:54 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:54 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:59 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:09:59 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:09:59 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:59 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:59 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:09:59 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:02 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:02 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:02 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:03 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:03 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:03 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:03 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:04 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:04 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:04 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:04 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:04 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:04 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:04 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:04 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:04 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:04 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:04 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:04 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:06 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:06 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:06 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:06 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:06 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:06 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:10 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:10 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:10 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:11 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:15 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:15 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:15 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:15 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:15 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:18 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:19 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:23 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:23 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:23 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:23 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:23 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:23 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:26 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:26 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:27 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:27 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:27 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:31 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:31 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:31 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:31 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:32 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:32 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:32 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:32 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:35 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:35 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:35 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:35 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:40 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:40 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:40 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:40 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:40 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:43 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:43 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:44 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:44 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:44 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:48 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:48 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:48 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:48 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:48 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:48 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:48 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:52 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:52 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:10:52 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:10:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:52 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:10:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:10:53 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:53 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:10:57 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:10:57 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:10:57 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:10:57 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:10:57 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:10:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:10:57 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:10:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:10:57 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:11:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:11:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:11:00 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:11:00 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:11:00 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:11:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:11:00 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:11:00 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:11:00 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:11:00 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:11:00 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:11:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:11:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:11:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:11:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:11:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:11:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:11:01 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:11:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:11:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:11:01 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:11:01 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:11:05 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:11:05 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:11:05 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:11:05 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:11:05 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:11:05 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:11:05 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:11:05 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:11:05 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:11:05 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:11:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:11:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - spin_result = sendRequestAndVerify(findTestObject("RGS(M4)/1_M4_spin", ["M4_login_user_id":M4_login_user_id, "rgs_session_token":rgs_session_token, "partner":Partner])): Send request and verify the response successfully

2019-08-11 00:11:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:11:09 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin = new groovy.json.JsonSlurper(): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - result_M4_spin = M4_spin.parseText(response.getResponseBodyContent()): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = current_balance: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_current_balance = M4_spin_current_balance: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = causality: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_transaction_id = M4_spin_transaction_id: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_round_id = round_id: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_round_id = M4_spin_round_id: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = line_wins: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_line_wins = M4_spin_line_wins: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = total_bonus_spins: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("******M4_total_bonus_spins type is:*******" + newline + getClass().getName()): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins_int = M4_total_bonus_spins_int: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = Integer.toString(M4_total_bonus_spins_int): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_total_bonus_spins = M4_total_bonus_spins: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("M4_total_bonus_spins is:" + M4_total_bonus_spins): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_bonus_data = bonus_data: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_features_triggered = result_M4_spin: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - wild = []: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - wild[0] = "WILD_Expanding": null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - wild[1] = "WILD_Normal": null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - wild[2] = "WILD_Double": null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - wild[3] = "WILD_ExtraFG": null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - wild[4] = "WILD_Triple": null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - wildList = Arrays.asList(wild): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - wildList = wildList: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = []: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = 0: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = 0: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = 0: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reels = reels: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_spin_reels.size(), (i++)]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("wild found on reel 3, adding counter by 1"): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[0] = free_spin_reel_counter[0] + 1: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("wild found on reel 4, adding counter by 1"): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[1] = free_spin_reel_counter[1] + 1: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbols = symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - for ([j = 0, j &lt; symbols.size(), (j++)]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - symbol = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println(symbol): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 2 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 3 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (i == 4 &amp;&amp; wildList.indexOf(symbol) != -1): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("wild found on reel 5, adding counter by 1"): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter[2] = free_spin_reel_counter[2] + 1: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - free_spin_reel_counter = free_spin_reel_counter: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("reel 3 wild found: " + free_spin_reel_counter[0]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("reel 4 wild found: " + free_spin_reel_counter[1]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("reel 5 wild found: " + free_spin_reel_counter[2]): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reels = M4_spin_reels: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = symbol: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reels_symbols = M4_spin_reels_symbols: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = reel_wins: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_reel_wins = M4_spin_reel_wins: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_reel_wins is: " + M4_spin_reel_wins): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = total_bonus_win_this_round: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - M4_spin_total_bonus_win_this_round = M4_spin_total_bonus_win_this_round: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - println("GlobalVariable.M4_spin_total_bonus_win_this_round is: " + M4_spin_total_bonus_win_this_round): null

2019-08-11 00:11:09 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:11:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - if (M4_total_bonus_spins_int != 0 &amp;&amp; M4_spin_reels_symbols[2].contains("WILD_Expanding")): null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - break: null

2019-08-11 00:11:09 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("RGS(M4)/1_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-11 00:11:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:11:11 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_object = M4_round_detail: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_balance_long = balance: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_balance = Long.toString(M4_round_balance_long): null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels1 = reels[0]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels1 = M4_round_reels1: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels2 = reels[1]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels2 = M4_round_reels2: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels3 = reels[2]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels3 = M4_round_reels3: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels4 = reels[3]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels4 = M4_round_reels4: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels5 = reels[4]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels5 = M4_round_reels5: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_F_reels1 = reels[0]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_F_reels1 = M4_round_F_reels1: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_F_reels2 = reels[1]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_F_reels2 = M4_round_F_reels2: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_F_reels3 = reels[2]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_F_reels3 = M4_round_F_reels3: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_F_reels4 = reels[3]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_F_reels4 = M4_round_F_reels4: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_F_reels5 = reels[4]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_F_reels5 = M4_round_F_reels5: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = symbols[0]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = M4_round_reels0_symbols1: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = symbols[1]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = M4_round_reels0_symbols2: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = symbols[2]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = M4_round_reels0_symbols3: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = symbols[0]: null

2019-08-11 00:11:11 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = M4_round_reels1_symbols1: null

2019-08-11 00:11:14 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = symbols[1]: null

2019-08-11 00:11:14 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = M4_round_reels1_symbols2: null

2019-08-11 00:11:14 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = symbols[2]: null

2019-08-11 00:11:14 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = M4_round_reels1_symbols3: null

2019-08-11 00:11:14 - [TEST_STEP][PASSED] - M4_round_reels1_symbols4 = symbols[3]: null

2019-08-11 00:11:14 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = symbol: null

2019-08-11 00:11:14 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = M4_round_reels_symbols_all: null

2019-08-11 00:11:14 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-11 00:11:14 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-11 00:11:14 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = wild_multiplier: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = M4_round_wild_multiplier: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_wild_config = wild_config: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_wild_config = M4_round_wild_config: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_wild_config_index = index: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_original_reels = original_reels: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_original_reels = M4_round_original_reels: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_swapped_reels = swapped_reels: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_swapped_reels = M4_round_swapped_reels: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_free_spins_added = free_spins_added: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results[0]: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_feature_state = feature_state: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_feature_state = M4_round_feature_state: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_scatter_win = scatter_win: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_scatter_win = M4_round_scatter_win: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_spin_result1 = spin_results[1]: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_spin_result1 = M4_round_spin_result1: null

2019-08-11 00:11:17 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:11:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - wildExpandingIndex = -1: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - wildExpandingFeatureStateKeys = null: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_round_features_triggered.size(), (i++)]): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - if (type.equals("EXPANDING_WILD")): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - if (type.equals("EXPANDING_WILD")): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - if (type.equals("EXPANDING_WILD")): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - if (type.equals("EXPANDING_WILD")): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - wildExpandingIndex = i: null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - wildExpandingFeatureStateKeys = feature_state.keySet(): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - println(wildExpandingIndex): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - println(wildExpandingFeatureStateKeys): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - Expanding_keys = new java.util.ArrayList(wildExpandingFeatureStateKeys): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - Collections.sort(Expanding): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - Collections.sort(Expanding_keys): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - println("Expanding is:" + Expanding): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - println("Expanding_keys is:" + Expanding_keys): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - assert Expanding.equals(Expanding_keys): null

2019-08-11 00:11:17 - [TEST_STEP][PASSED] - callTestCase(findTestCase("M4-Game/Super_Wild/backup/compare_values/5_specific_Expanding_verify_value_call_test_case"), ["Partner":Partner, "Userid":Userid, "Game_code":Game_code, "url_krug_gw":url_krug_gw, "secret_key":secret_key, "M4_recorder":M4_recorder]): Call Test Case 'Test Cases/M4-Game/Super_Wild/backup/compare_values/5_specific_Expanding_verify_value_call_test_case' successfully

2019-08-11 00:11:18 - [TEST_CASE][PASSED] - Test Cases/M4-Game/Super_Wild/backup/compare_values/5_specific_Expanding_verify_value_call_test_case: Test Cases/M4-Game/Super_Wild/backup/compare_values/5_specific_Expanding_verify_value_call_test_case

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("Wallet/Get_Session_Token", ["url_krug_gw":url_krug_gw, "partner":Partner, "secret_key":secret_key, "userid":Userid])): Send request and verify the response successfully

2019-08-11 00:11:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:11:18 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - getResponseText()).contains("session_token"): null

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - getsession = new groovy.json.JsonSlurper(): null

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - result_getsession = getsession.parseText(response.getResponseBodyContent()): null

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - println("...value extracted is :" + session_token): null

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - session_token = session_token: null

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - println("GlobalVariable is :" + session_token): null

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - internal_balance = internal_balance: null

2019-08-11 00:11:18 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:11:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:11:18 - [TEST_STEP][PASSED] - M4_login = sendRequestAndVerify(findTestObject("RGS(M4)/M4_Login", ["partner":Partner, "game_code":Game_code, "session_token":session_token])): Send request and verify the response successfully

2019-08-11 00:11:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:11:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_login = new groovy.json.JsonSlurper(): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - result_M4_login = M4_login.parseText(response.getResponseBodyContent()): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_login_user_id = user_id: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - println("playerid is: " + M4_login_user_id): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-11 00:11:19 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:11:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_login_user_id = M4_login_user_id: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_init = sendRequestAndVerify(findTestObject("RGS(M4)/M4_init", ["partner":Partner, "M4_recorder":M4_recorder, "M4_login_user_id":M4_login_user_id])): Send request and verify the response successfully

2019-08-11 00:11:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:11:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_init = new groovy.json.JsonSlurper(): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - result_M4_init = M4_init.parseText(response.getResponseBodyContent()): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - rgs_session_token = session_token: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_init_balance = balance: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_init_balance = M4_init_balance: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - game_code = genesis_id: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - game_code = game_code: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_free_round = free_round: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_free_round = M4_free_round: null

2019-08-11 00:11:19 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:11:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - rgs_session_token = rgs_session_token: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - sendRequestAndVerify(findTestObject("RGS(M4)/1_Round_detail", ["partner":Partner, "M4_spin_round_id":M4_spin_round_id])): Send request and verify the response successfully

2019-08-11 00:11:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - verifyResponseStatusCode(response, 200): Verify response status code successfully

2019-08-11 00:11:19 - [MESSAGE][PASSED] - Verify response status code successfully

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - getStatusCode()).isEqualTo(200): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - newline = System.getProperty("line.separator"): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round = new groovy.json.JsonSlurper(): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_detail = M4_round.parseText(response.getResponseBodyContent()): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_object = M4_round_detail: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_object = M4_round_object: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_transaction_type = transaction_type: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_transaction_type = M4_round_transaction_type: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_player_id = player_id: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_player_id = M4_round_player_id: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_booster_type = booster_type: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_booster_type = M4_round_booster_type: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_currency = currency: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_currency = M4_round_currency: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_id = round_id: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_id = M4_round_id: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_transaction_id = transaction_id: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_transaction_id = M4_round_transaction_id: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_transaction_time = transaction_time: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_transaction_time = M4_round_transaction_time: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_total_win = total_win: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_total_win = M4_round_total_win: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_balance_long = balance: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_balance = Long.toString(M4_round_balance_long): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_balance = M4_round_balance: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_total_bet = total_bet: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_total_bet = M4_round_total_bet: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_bet_value = bet_value: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_bet_value = M4_round_bet_value: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_line = line: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_line = M4_round_line: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels1 = reels[0]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels1 = M4_round_reels1: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels2 = reels[1]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels2 = M4_round_reels2: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels3 = reels[2]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels3 = M4_round_reels3: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels4 = reels[3]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels4 = M4_round_reels4: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels5 = reels[4]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels5 = M4_round_reels5: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_F_reels1 = reels[0]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_F_reels1 = M4_round_F_reels1: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_F_reels2 = reels[1]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_F_reels2 = M4_round_F_reels2: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_F_reels3 = reels[2]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_F_reels3 = M4_round_F_reels3: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_F_reels4 = reels[3]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_F_reels4 = M4_round_F_reels4: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_F_reels5 = reels[4]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_F_reels5 = M4_round_F_reels5: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = symbols[0]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels0_symbols1 = M4_round_reels0_symbols1: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = symbols[1]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels0_symbols2 = M4_round_reels0_symbols2: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = symbols[2]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels0_symbols3 = M4_round_reels0_symbols3: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = symbols[0]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols1 = M4_round_reels1_symbols1: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = symbols[1]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols2 = M4_round_reels1_symbols2: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = symbols[2]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols3 = M4_round_reels1_symbols3: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels1_symbols4 = symbols[3]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = symbol: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_reels_symbols_all = M4_round_reels_symbols_all: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_features_triggered = features_triggered: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_features_complete = complete: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_features_complete = M4_round_features_complete: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_free_spins_left = free_spins_left: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_free_spins_left = M4_round_free_spins_left: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = total_free_spin_count: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_total_free_spin_count = M4_round_total_free_spin_count: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = total_free_spin_win_amount: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_total_free_spin_win_amount = M4_round_total_free_spin_win_amount: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_subfeatures = subfeatures: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_subfeatures = M4_round_subfeatures: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = wild_multiplier: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_wild_multiplier = M4_round_wild_multiplier: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_wild_config = wild_config: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_wild_config = M4_round_wild_config: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_wild_config_index = index: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_original_reels = original_reels: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_original_reels = M4_round_original_reels: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_swapped_reels = swapped_reels: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_swapped_reels = M4_round_swapped_reels: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_free_spins_added = free_spins_added: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_spin_result_list = spin_results[0]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_spin_result_list = M4_round_spin_result_list: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_feature_state = feature_state: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_feature_state = M4_round_feature_state: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_feature_state_all = feature_state: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_feature_state_all = M4_round_feature_state_all: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_features_type = type: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_features_type = M4_round_features_type: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_scatter_win = scatter_win: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_scatter_win = M4_round_scatter_win: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_spin_result1 = spin_results[1]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_spin_result1 = M4_round_spin_result1: null

2019-08-11 00:11:19 - [MESSAGE][PASSED] - Verify response successfully

2019-08-11 00:11:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - M4_round_features_triggered = M4_round_features_triggered: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - extraFreeSpinTypeAndComplete = false: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - original = "": null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - swapped = "": null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - for ([i = 0, i &lt; M4_round_features_triggered.size(), (i++)]): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - if (type.equals("EXPANDING_WILD") &amp;&amp; complete == true): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - if (type.equals("EXPANDING_WILD") &amp;&amp; complete == true): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - if (type.equals("EXPANDING_WILD") &amp;&amp; complete == true): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - trigger = M4_round_features_triggered[i]: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - if (type.equals("EXPANDING_WILD") &amp;&amp; complete == true): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - extraFreeSpinTypeAndComplete = true: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - original = original_reels: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - swapped = swapped_reels: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - println("original is:" + original): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - println("swapped is: " + swapped): null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - assert extraFreeSpinTypeAndComplete == true: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - assert original.size() == 0: null

2019-08-11 00:11:19 - [TEST_STEP][PASSED] - assert swapped == null: null

2019-08-11 00:11:19 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/M4-Game/Super_Wild/backup/compare_values/5_specific_Expanding_verify_value_call_test_case' successfully</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2019-08-11 00:01:37 - [TEST_SUITE][PASSED] - superWild_5: Test Cases/M4-Game/Super_Wild/5_Expanding_CALL</system-out>
        <system-err></system-err>
    </testsuite>
</testsuites>
